services:
  backend:
    container_name: backend
    hostname: backend
    build:
      context: ./BackEnd
    depends_on:
      database:
        condition: service_healthy
    env_file:
      - .env
    restart: unless-stopped
    # ports:
    #   - "2000:2000" # Backend port, only for https proof
    networks:
      - ft_transcendence
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:2000/health || exit 1"]
      interval: 2s
      timeout: 30s
      retries: 10

  database:
    container_name: database
    hostname: database
    image: postgres:latest
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./DataBase/tools/init.sql:/docker-entrypoint-initdb.d/init.sql
    env_file:
      - .env
    restart: unless-stopped
    networks:
      - ft_transcendence
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 2s
      timeout: 30s
      retries: 10

  frontend:
    container_name: frontend
    hostname: frontend
    build:
      context: ./FrontEnd
    depends_on:
      backend:
        condition: service_healthy
      database:
        condition: service_healthy
    env_file:
      - .env
    ports:
      - "80:80"
    restart: unless-stopped
    networks:
      - ft_transcendence
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:80/ || exit 1"]
      interval: 2s
      timeout: 30s
      retries: 10

volumes:
  postgres_data:
    driver: local

networks:
  ft_transcendence:
    name: ft_transcendence
    driver: bridge

