services:
  backend:
    container_name: backend
    hostname: backend
    build:
      context: ./BackEnd
    depends_on:
      database:
        condition: service_healthy
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "3000:3000" # Access API BackEnd
    restart: unless-stopped
    networks:
      - ft_transcendence
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3000/health || exit 1"]
      interval: 2s
      timeout: 30s
      retries: 10

  database:
    container_name: database
    hostname: database
    image: postgres:latest
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./DataBase/tools/init.sql:/docker-entrypoint-initdb.d/init.sql
    env_file:
      - .env
    restart: unless-stopped
    networks:
      - ft_transcendence
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 2s
      timeout: 30s
      retries: 10

  frontend:
    container_name: frontend
    hostname: frontend
    build:
      context: ./FrontEnd
    depends_on:
      backend:
        condition: service_healthy
      database:
        condition: service_healthy
    env_file:
      - .env
    ports:
      - "3002:3002"
    restart: unless-stopped
    networks:
      - ft_transcendence

volumes:
  postgres_data:
    driver: local

networks:
  ft_transcendence:
    name: ft_transcendence
    driver: bridge

