{"ast":null,"code":"import * as THREE from './three/build/three.module.js';\nimport cubeVert from './cube-vert.glsl.js';\nimport cubeFrag from './cube-frag.glsl.js';\nimport planeVert from './plane-vert.glsl.js';\nimport planeFrag from './plane-frag.glsl.js';\nimport postProcess from './postProcess.glsl.js';\nfunction InitCamera() {\n  var camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n  camera.position.x = -150;\n  camera.position.y = 15;\n  camera.position.z = 100;\n  camera.rotation.x = -0.2;\n  return camera;\n}\nfunction InitRenderer() {\n  var renderer = new THREE.WebGLRenderer();\n  var container = document.querySelector(\".background\");\n  renderer.setSize(window.innerWidth, window.innerHeight);\n  container.appendChild(renderer.domElement);\n  return renderer;\n}\nfunction InitShader(vertex, fragment) {\n  var shader = new THREE.ShaderMaterial({\n    uniforms: {\n      time: {\n        value: 0.0\n      },\n      resolution: {\n        type: \"v2\",\n        value: new THREE.Vector2(window.innerWidth, window.innerHeight)\n      }\n    },\n    vertexShader: vertex,\n    fragmentShader: fragment\n  });\n  return shader;\n}\nfunction InitPostProcess() {\n  var composer = new EffectComposer(renderer);\n  var renderPass = new RenderPass(scene, camera);\n  composer.addPass(renderPass);\n  var post = new ShaderPass(postProcess);\n  composer.addPass(post);\n  return composer;\n}\nvar camSpeed = -0.02;\nfunction CubeAnimation() {\n  renderer.setSize(window.innerWidth, window.innerHeight);\n  if (camera.position.x >= 150 && camSpeed > -0.02) camSpeed -= 0.005;\n  if (camera.position.x <= -150 && camSpeed < 0.02) camSpeed += 0.005;\n  if (camera.position.y < 10.0) camera.position.y += 0.03;\n  if (camera.position.z > 90.0) camera.position.z -= 0.06;\n  if (camera.rotation.x >= -3.14 / 2) camera.rotation.x -= 0.005;\n  groundMesh.material.uniforms.time.value += 1;\n  planeMesh.material.uniforms.time.value += 1;\n  camera.position.x += camSpeed;\n  planeMesh.position.x = camera.position.x;\n  renderer.render(scene, camera);\n}\nvar renderer = InitRenderer();\nvar camera = InitCamera();\nvar scene = new THREE.Scene();\n//const composer = InitPostProcess();\n\nvar planeGeometry = new THREE.PlaneGeometry(500, 500);\nvar planeMesh = new THREE.Mesh(planeGeometry, InitShader(planeVert, planeFrag));\nvar groundGeometry = new THREE.PlaneGeometry(500, 500, 25, 25);\nvar groundMesh = new THREE.Mesh(groundGeometry, InitShader(cubeVert, cubeFrag));\ngroundMesh.rotation.x = -3.14 / 2;\nscene.add(planeMesh);\nscene.add(groundMesh);\nscene.fog = new THREE.FogExp2(0xaaaaaa, 0.4);\nrenderer.setAnimationLoop(CubeAnimation);","map":{"version":3,"names":["THREE","cubeVert","cubeFrag","planeVert","planeFrag","postProcess","InitCamera","camera","PerspectiveCamera","window","innerWidth","innerHeight","position","x","y","z","rotation","InitRenderer","renderer","WebGLRenderer","container","document","querySelector","setSize","appendChild","domElement","InitShader","vertex","fragment","shader","ShaderMaterial","uniforms","time","value","resolution","type","Vector2","vertexShader","fragmentShader","InitPostProcess","composer","EffectComposer","renderPass","RenderPass","scene","addPass","post","ShaderPass","camSpeed","CubeAnimation","groundMesh","material","planeMesh","render","Scene","planeGeometry","PlaneGeometry","Mesh","groundGeometry","add","fog","FogExp2","setAnimationLoop"],"sources":["/home/valentin/Documents/ft_transcendence/front_end/src/components/ThreeJS/main.js"],"sourcesContent":["import * as THREE from './three/build/three.module.js'\n\nimport cubeVert from './cube-vert.glsl.js';\nimport cubeFrag from './cube-frag.glsl.js';\nimport planeVert from './plane-vert.glsl.js';\nimport planeFrag from './plane-frag.glsl.js';\nimport postProcess from './postProcess.glsl.js';\n\nfunction InitCamera()\n{\n\tconst camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n\n\tcamera.position.x = -150;\n\tcamera.position.y = 15;\n\tcamera.position.z = 100;\n\tcamera.rotation.x = -0.2;\n\treturn camera;\n}\n\nfunction InitRenderer()\n{\n\tconst renderer = new THREE.WebGLRenderer();\n\tconst container = document.querySelector(\".background\");\n\n\trenderer.setSize(window.innerWidth, window.innerHeight);\n\tcontainer.appendChild(renderer.domElement);\n\treturn renderer;\n}\n\n\nfunction InitShader(vertex, fragment)\n{\n\tconst shader = new THREE.ShaderMaterial( {\n\t\tuniforms: {time:{ value: 0.0}, resolution:{type: \"v2\", value: new THREE.Vector2(window.innerWidth, window.innerHeight)}},\n\t\tvertexShader: vertex,\n\t\tfragmentShader: fragment\n\t} );\n\treturn shader;\n}\n\nfunction InitPostProcess()\n{\n\tconst composer = new EffectComposer(renderer);\n\n\tconst renderPass = new  RenderPass(scene, camera);\n\tcomposer.addPass(renderPass);\n\n\tconst post = new ShaderPass(postProcess);\n\tcomposer.addPass(post);\n\treturn composer;\n}\n\nvar camSpeed = -0.02;\n\nfunction CubeAnimation()\n{\n\trenderer.setSize(window.innerWidth, window.innerHeight);\n\tif (camera.position.x >= 150 && camSpeed > -0.02)\n\t\tcamSpeed -= 0.005\n\n\tif (camera.position.x <= -150 && camSpeed < 0.02)\n\t\tcamSpeed += 0.005\n\tif (camera.position.y < 10.0)\n\t\tcamera.position.y += 0.03;\n\tif (camera.position.z > 90.0)\n\t\tcamera.position.z -= 0.06;\n\tif (camera.rotation.x >= -3.14 / 2)\n\t\tcamera.rotation.x -= 0.005;\n\tgroundMesh.material.uniforms.time.value += 1;\n\tplaneMesh.material.uniforms.time.value += 1;\n\tcamera.position.x += camSpeed;\n\tplaneMesh.position.x = camera.position.x\n\trenderer.render(scene, camera);\n}\n\nconst renderer = InitRenderer();\nconst camera = InitCamera();\nconst scene = new THREE.Scene();\n//const composer = InitPostProcess();\n\nconst planeGeometry = new THREE.PlaneGeometry(500, 500);\nconst planeMesh = new THREE.Mesh(planeGeometry, InitShader(planeVert, planeFrag));\n\nconst groundGeometry = new THREE.PlaneGeometry(500, 500, 25, 25);\nconst groundMesh = new THREE.Mesh(groundGeometry, InitShader(cubeVert, cubeFrag));\ngroundMesh.rotation.x = -3.14 / 2;\n\nscene.add(planeMesh);\nscene.add(groundMesh);\nscene.fog = new THREE.FogExp2(0xaaaaaa, 0.4);\n\nrenderer.setAnimationLoop( CubeAnimation );\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}