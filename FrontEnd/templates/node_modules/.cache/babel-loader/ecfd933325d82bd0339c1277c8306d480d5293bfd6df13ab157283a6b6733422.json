{"ast":null,"code":"var cubeFrag = \"\\nvarying vec2 vUv;\\n\\nuniform float\\ttime;\\n\\nvec3\\tgetGrid(vec2 uv, float width, vec3 baseColor)\\n{\\n\\tfloat\\tc = max(smoothstep(width, 0.001f, abs(uv.x)), smoothstep(width, 0.001f, abs(uv.y)));\\n\\t\\n\\treturn vec3(c) * baseColor;\\n}\\n\\nfloat\\tnSample = 0.0f;\\n\\nvec4\\tantiAl(vec2 uv)\\n{\\n\\tnSample += 1.0f;\\n\\n\\treturn vec4(dot(uv, uv) <= 0.4);\\n}\\n\\nvoid\\tmain()\\n{\\n\\tvec3\\tcolor = vec3(0.1f, 0.0f, 0.2f);\\n\\tvec2\\tuv = fract(vUv * 1000.0f) - 0.5f;\\n\\n\\tcolor += getGrid(uv, 0.04f, vec3(1.5f, 0.8f, 2.0f));\\n\\tcolor += getGrid(uv, 0.08f, vec3(1.0f, 0.4f, 1.5f));\\n\\n\\n\\tcolor *= vec3(-(abs(vUv.y) - 0.6f)) * 3.0f;\\n\\n\\tgl_FragColor = vec4(color.xy, 1.0f, 1.0f);\\n\\n\\t//gl_FragColor += antiAl(vUv);\\n\\n\\t//gl_FragColor /= nSample;\\n}\";\nexport default cubeFrag;","map":{"version":3,"names":["cubeFrag"],"sources":["/home/valentin/Documents/ft_transcendence/front_end/src/components/ThreeJS/cube-frag.glsl.js"],"sourcesContent":["const cubeFrag = `\nvarying vec2 vUv;\n\nuniform float\ttime;\n\nvec3\tgetGrid(vec2 uv, float width, vec3 baseColor)\n{\n\tfloat\tc = max(smoothstep(width, 0.001f, abs(uv.x)), smoothstep(width, 0.001f, abs(uv.y)));\n\t\n\treturn vec3(c) * baseColor;\n}\n\nfloat\tnSample = 0.0f;\n\nvec4\tantiAl(vec2 uv)\n{\n\tnSample += 1.0f;\n\n\treturn vec4(dot(uv, uv) <= 0.4);\n}\n\nvoid\tmain()\n{\n\tvec3\tcolor = vec3(0.1f, 0.0f, 0.2f);\n\tvec2\tuv = fract(vUv * 1000.0f) - 0.5f;\n\n\tcolor += getGrid(uv, 0.04f, vec3(1.5f, 0.8f, 2.0f));\n\tcolor += getGrid(uv, 0.08f, vec3(1.0f, 0.4f, 1.5f));\n\n\n\tcolor *= vec3(-(abs(vUv.y) - 0.6f)) * 3.0f;\n\n\tgl_FragColor = vec4(color.xy, 1.0f, 1.0f);\n\n\t//gl_FragColor += antiAl(vUv);\n\n\t//gl_FragColor /= nSample;\n}`;\n\nexport default cubeFrag;\n"],"mappings":"AAAA,IAAMA,QAAQ,quBAqCZ;AAEF,eAAeA,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}