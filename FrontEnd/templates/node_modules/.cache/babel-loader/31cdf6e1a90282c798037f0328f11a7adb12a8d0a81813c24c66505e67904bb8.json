{"ast":null,"code":"/*! \n * portal-vue © Thorsten Lünborg, 2019 \n * \n * Version: 2.1.7\n * \n * LICENCE: MIT \n * \n * https://github.com/linusborg/portal-vue\n * \n*/\n\n'use strict';\n\nrequire(\"core-js/modules/es.array.push.js\");\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nfunction _interopDefault(ex) {\n  return ex && typeof ex === 'object' && 'default' in ex ? ex['default'] : ex;\n}\nvar Vue = _interopDefault(require('vue'));\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function (obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function (obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n  return _typeof(obj);\n}\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();\n}\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) arr2[i] = arr[i];\n    return arr2;\n  }\n}\nfunction _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}\nvar inBrowser = typeof window !== 'undefined';\nfunction freeze(item) {\n  if (Array.isArray(item) || _typeof(item) === 'object') {\n    return Object.freeze(item);\n  }\n  return item;\n}\nfunction combinePassengers(transports) {\n  var slotProps = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return transports.reduce(function (passengers, transport) {\n    var temp = transport.passengers[0];\n    var newPassengers = typeof temp === 'function' ? temp(slotProps) : transport.passengers;\n    return passengers.concat(newPassengers);\n  }, []);\n}\nfunction stableSort(array, compareFn) {\n  return array.map(function (v, idx) {\n    return [idx, v];\n  }).sort(function (a, b) {\n    return compareFn(a[1], b[1]) || a[0] - b[0];\n  }).map(function (c) {\n    return c[1];\n  });\n}\nfunction pick(obj, keys) {\n  return keys.reduce(function (acc, key) {\n    if (obj.hasOwnProperty(key)) {\n      acc[key] = obj[key];\n    }\n    return acc;\n  }, {});\n}\nvar transports = {};\nvar targets = {};\nvar sources = {};\nvar Wormhole = Vue.extend({\n  data: function data() {\n    return {\n      transports: transports,\n      targets: targets,\n      sources: sources,\n      trackInstances: inBrowser\n    };\n  },\n  methods: {\n    open: function open(transport) {\n      if (!inBrowser) return;\n      var to = transport.to,\n        from = transport.from,\n        passengers = transport.passengers,\n        _transport$order = transport.order,\n        order = _transport$order === void 0 ? Infinity : _transport$order;\n      if (!to || !from || !passengers) return;\n      var newTransport = {\n        to: to,\n        from: from,\n        passengers: freeze(passengers),\n        order: order\n      };\n      var keys = Object.keys(this.transports);\n      if (keys.indexOf(to) === -1) {\n        Vue.set(this.transports, to, []);\n      }\n      var currentIndex = this.$_getTransportIndex(newTransport); // Copying the array here so that the PortalTarget change event will actually contain two distinct arrays\n\n      var newTransports = this.transports[to].slice(0);\n      if (currentIndex === -1) {\n        newTransports.push(newTransport);\n      } else {\n        newTransports[currentIndex] = newTransport;\n      }\n      this.transports[to] = stableSort(newTransports, function (a, b) {\n        return a.order - b.order;\n      });\n    },\n    close: function close(transport) {\n      var force = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      var to = transport.to,\n        from = transport.from;\n      if (!to || !from && force === false) return;\n      if (!this.transports[to]) {\n        return;\n      }\n      if (force) {\n        this.transports[to] = [];\n      } else {\n        var index = this.$_getTransportIndex(transport);\n        if (index >= 0) {\n          // Copying the array here so that the PortalTarget change event will actually contain two distinct arrays\n          var newTransports = this.transports[to].slice(0);\n          newTransports.splice(index, 1);\n          this.transports[to] = newTransports;\n        }\n      }\n    },\n    registerTarget: function registerTarget(target, vm, force) {\n      if (!inBrowser) return;\n      if (this.trackInstances && !force && this.targets[target]) {\n        console.warn(\"[portal-vue]: Target \".concat(target, \" already exists\"));\n      }\n      this.$set(this.targets, target, Object.freeze([vm]));\n    },\n    unregisterTarget: function unregisterTarget(target) {\n      this.$delete(this.targets, target);\n    },\n    registerSource: function registerSource(source, vm, force) {\n      if (!inBrowser) return;\n      if (this.trackInstances && !force && this.sources[source]) {\n        console.warn(\"[portal-vue]: source \".concat(source, \" already exists\"));\n      }\n      this.$set(this.sources, source, Object.freeze([vm]));\n    },\n    unregisterSource: function unregisterSource(source) {\n      this.$delete(this.sources, source);\n    },\n    hasTarget: function hasTarget(to) {\n      return !!(this.targets[to] && this.targets[to][0]);\n    },\n    hasSource: function hasSource(to) {\n      return !!(this.sources[to] && this.sources[to][0]);\n    },\n    hasContentFor: function hasContentFor(to) {\n      return !!this.transports[to] && !!this.transports[to].length;\n    },\n    // Internal\n    $_getTransportIndex: function $_getTransportIndex(_ref) {\n      var to = _ref.to,\n        from = _ref.from;\n      for (var i in this.transports[to]) {\n        if (this.transports[to][i].from === from) {\n          return +i;\n        }\n      }\n      return -1;\n    }\n  }\n});\nvar wormhole = new Wormhole(transports);\nvar _id = 1;\nvar Portal = Vue.extend({\n  name: 'portal',\n  props: {\n    disabled: {\n      type: Boolean\n    },\n    name: {\n      type: String,\n      default: function _default() {\n        return String(_id++);\n      }\n    },\n    order: {\n      type: Number,\n      default: 0\n    },\n    slim: {\n      type: Boolean\n    },\n    slotProps: {\n      type: Object,\n      default: function _default() {\n        return {};\n      }\n    },\n    tag: {\n      type: String,\n      default: 'DIV'\n    },\n    to: {\n      type: String,\n      default: function _default() {\n        return String(Math.round(Math.random() * 10000000));\n      }\n    }\n  },\n  created: function created() {\n    var _this = this;\n    this.$nextTick(function () {\n      wormhole.registerSource(_this.name, _this);\n    });\n  },\n  mounted: function mounted() {\n    if (!this.disabled) {\n      this.sendUpdate();\n    }\n  },\n  updated: function updated() {\n    if (this.disabled) {\n      this.clear();\n    } else {\n      this.sendUpdate();\n    }\n  },\n  beforeDestroy: function beforeDestroy() {\n    wormhole.unregisterSource(this.name);\n    this.clear();\n  },\n  watch: {\n    to: function to(newValue, oldValue) {\n      oldValue && oldValue !== newValue && this.clear(oldValue);\n      this.sendUpdate();\n    }\n  },\n  methods: {\n    clear: function clear(target) {\n      var closer = {\n        from: this.name,\n        to: target || this.to\n      };\n      wormhole.close(closer);\n    },\n    normalizeSlots: function normalizeSlots() {\n      return this.$scopedSlots.default ? [this.$scopedSlots.default] : this.$slots.default;\n    },\n    normalizeOwnChildren: function normalizeOwnChildren(children) {\n      return typeof children === 'function' ? children(this.slotProps) : children;\n    },\n    sendUpdate: function sendUpdate() {\n      var slotContent = this.normalizeSlots();\n      if (slotContent) {\n        var transport = {\n          from: this.name,\n          to: this.to,\n          passengers: _toConsumableArray(slotContent),\n          order: this.order\n        };\n        wormhole.open(transport);\n      } else {\n        this.clear();\n      }\n    }\n  },\n  render: function render(h) {\n    var children = this.$slots.default || this.$scopedSlots.default || [];\n    var Tag = this.tag;\n    if (children && this.disabled) {\n      return children.length <= 1 && this.slim ? this.normalizeOwnChildren(children)[0] : h(Tag, [this.normalizeOwnChildren(children)]);\n    } else {\n      return this.slim ? h() : h(Tag, {\n        class: {\n          'v-portal': true\n        },\n        style: {\n          display: 'none'\n        },\n        key: 'v-portal-placeholder'\n      });\n    }\n  }\n});\nvar PortalTarget = Vue.extend({\n  name: 'portalTarget',\n  props: {\n    multiple: {\n      type: Boolean,\n      default: false\n    },\n    name: {\n      type: String,\n      required: true\n    },\n    slim: {\n      type: Boolean,\n      default: false\n    },\n    slotProps: {\n      type: Object,\n      default: function _default() {\n        return {};\n      }\n    },\n    tag: {\n      type: String,\n      default: 'div'\n    },\n    transition: {\n      type: [String, Object, Function]\n    }\n  },\n  data: function data() {\n    return {\n      transports: wormhole.transports,\n      firstRender: true\n    };\n  },\n  created: function created() {\n    var _this = this;\n    this.$nextTick(function () {\n      wormhole.registerTarget(_this.name, _this);\n    });\n  },\n  watch: {\n    ownTransports: function ownTransports() {\n      this.$emit('change', this.children().length > 0);\n    },\n    name: function name(newVal, oldVal) {\n      /**\r\n       * TODO\r\n       * This should warn as well ...\r\n       */\n      wormhole.unregisterTarget(oldVal);\n      wormhole.registerTarget(newVal, this);\n    }\n  },\n  mounted: function mounted() {\n    var _this2 = this;\n    if (this.transition) {\n      this.$nextTick(function () {\n        // only when we have a transition, because it causes a re-render\n        _this2.firstRender = false;\n      });\n    }\n  },\n  beforeDestroy: function beforeDestroy() {\n    wormhole.unregisterTarget(this.name);\n  },\n  computed: {\n    ownTransports: function ownTransports() {\n      var transports = this.transports[this.name] || [];\n      if (this.multiple) {\n        return transports;\n      }\n      return transports.length === 0 ? [] : [transports[transports.length - 1]];\n    },\n    passengers: function passengers() {\n      return combinePassengers(this.ownTransports, this.slotProps);\n    }\n  },\n  methods: {\n    // can't be a computed prop because it has to \"react\" to $slot changes.\n    children: function children() {\n      return this.passengers.length !== 0 ? this.passengers : this.$scopedSlots.default ? this.$scopedSlots.default(this.slotProps) : this.$slots.default || [];\n    },\n    // can't be a computed prop because it has to \"react\" to this.children().\n    noWrapper: function noWrapper() {\n      var noWrapper = this.slim && !this.transition;\n      if (noWrapper && this.children().length > 1) {\n        console.warn('[portal-vue]: PortalTarget with `slim` option received more than one child element.');\n      }\n      return noWrapper;\n    }\n  },\n  render: function render(h) {\n    var noWrapper = this.noWrapper();\n    var children = this.children();\n    var Tag = this.transition || this.tag;\n    return noWrapper ? children[0] : this.slim && !Tag ? h() : h(Tag, {\n      props: {\n        // if we have a transition component, pass the tag if it exists\n        tag: this.transition && this.tag ? this.tag : undefined\n      },\n      class: {\n        'vue-portal-target': true\n      }\n    }, children);\n  }\n});\nvar _id$1 = 0;\nvar portalProps = ['disabled', 'name', 'order', 'slim', 'slotProps', 'tag', 'to'];\nvar targetProps = ['multiple', 'transition'];\nvar MountingPortal = Vue.extend({\n  name: 'MountingPortal',\n  inheritAttrs: false,\n  props: {\n    append: {\n      type: [Boolean, String]\n    },\n    bail: {\n      type: Boolean\n    },\n    mountTo: {\n      type: String,\n      required: true\n    },\n    // Portal\n    disabled: {\n      type: Boolean\n    },\n    // name for the portal\n    name: {\n      type: String,\n      default: function _default() {\n        return 'mounted_' + String(_id$1++);\n      }\n    },\n    order: {\n      type: Number,\n      default: 0\n    },\n    slim: {\n      type: Boolean\n    },\n    slotProps: {\n      type: Object,\n      default: function _default() {\n        return {};\n      }\n    },\n    tag: {\n      type: String,\n      default: 'DIV'\n    },\n    // name for the target\n    to: {\n      type: String,\n      default: function _default() {\n        return String(Math.round(Math.random() * 10000000));\n      }\n    },\n    // Target\n    multiple: {\n      type: Boolean,\n      default: false\n    },\n    targetSlim: {\n      type: Boolean\n    },\n    targetSlotProps: {\n      type: Object,\n      default: function _default() {\n        return {};\n      }\n    },\n    targetTag: {\n      type: String,\n      default: 'div'\n    },\n    transition: {\n      type: [String, Object, Function]\n    }\n  },\n  created: function created() {\n    if (typeof document === 'undefined') return;\n    var el = document.querySelector(this.mountTo);\n    if (!el) {\n      console.error(\"[portal-vue]: Mount Point '\".concat(this.mountTo, \"' not found in document\"));\n      return;\n    }\n    var props = this.$props; // Target already exists\n\n    if (wormhole.targets[props.name]) {\n      if (props.bail) {\n        console.warn(\"[portal-vue]: Target \".concat(props.name, \" is already mounted.\\n        Aborting because 'bail: true' is set\"));\n      } else {\n        this.portalTarget = wormhole.targets[props.name];\n      }\n      return;\n    }\n    var append = props.append;\n    if (append) {\n      var type = typeof append === 'string' ? append : 'DIV';\n      var mountEl = document.createElement(type);\n      el.appendChild(mountEl);\n      el = mountEl;\n    } // get props for target from $props\n    // we have to rename a few of them\n\n    var _props = pick(this.$props, targetProps);\n    _props.slim = this.targetSlim;\n    _props.tag = this.targetTag;\n    _props.slotProps = this.targetSlotProps;\n    _props.name = this.to;\n    this.portalTarget = new PortalTarget({\n      el: el,\n      parent: this.$parent || this,\n      propsData: _props\n    });\n  },\n  beforeDestroy: function beforeDestroy() {\n    var target = this.portalTarget;\n    if (this.append) {\n      var el = target.$el;\n      el.parentNode.removeChild(el);\n    }\n    target.$destroy();\n  },\n  render: function render(h) {\n    if (!this.portalTarget) {\n      console.warn(\"[portal-vue] Target wasn't mounted\");\n      return h();\n    } // if there's no \"manual\" scoped slot, so we create a <Portal> ourselves\n\n    if (!this.$scopedSlots.manual) {\n      var props = pick(this.$props, portalProps);\n      return h(Portal, {\n        props: props,\n        attrs: this.$attrs,\n        on: this.$listeners,\n        scopedSlots: this.$scopedSlots\n      }, this.$slots.default);\n    } // else, we render the scoped slot\n\n    var content = this.$scopedSlots.manual({\n      to: this.to\n    }); // if user used <template> for the scoped slot\n    // content will be an array\n\n    if (Array.isArray(content)) {\n      content = content[0];\n    }\n    if (!content) return h();\n    return content;\n  }\n});\nfunction install(Vue$$1) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  Vue$$1.component(options.portalName || 'Portal', Portal);\n  Vue$$1.component(options.portalTargetName || 'PortalTarget', PortalTarget);\n  Vue$$1.component(options.MountingPortalName || 'MountingPortal', MountingPortal);\n}\nvar index = {\n  install: install\n};\nexports.default = index;\nexports.Portal = Portal;\nexports.PortalTarget = PortalTarget;\nexports.MountingPortal = MountingPortal;\nexports.Wormhole = wormhole;","map":{"version":3,"names":["inBrowser","window","freeze","item","Array","isArray","_typeof","Object","combinePassengers","transports","slotProps","arguments","length","undefined","reduce","passengers","transport","temp","newPassengers","concat","stableSort","array","compareFn","map","v","idx","sort","a","b","c","pick","obj","keys","acc","key","hasOwnProperty","targets","sources","Wormhole","Vue","extend","data","trackInstances","methods","open","to","from","order","_transport$order","Infinity","newTransport","indexOf","set","currentIndex","$_getTransportIndex","newTransports","slice","push","close","force","index","splice","registerTarget","target","vm","console","warn","$set","unregisterTarget","$delete","registerSource","source","unregisterSource","hasTarget","hasSource","hasContentFor","_ref","i","wormhole","_id","Portal","name","props","disabled","type","Boolean","String","default","_default","Number","slim","tag","Math","round","random","created","$nextTick","_this","mounted","sendUpdate","updated","clear","beforeDestroy","watch","newValue","oldValue","closer","normalizeSlots","$scopedSlots","$slots","normalizeOwnChildren","children","slotContent","_toConsumableArray","render","h","Tag","class","style","display","PortalTarget","multiple","required","transition","Function","firstRender","ownTransports","$emit","newVal","oldVal","_this2","computed","noWrapper","_id$1","portalProps","targetProps","MountingPortal","inheritAttrs","append","bail","mountTo","targetSlim","targetSlotProps","targetTag","document","el","querySelector","error","$props","portalTarget","mountEl","createElement","appendChild","_props","parent","$parent","propsData","$el","parentNode","removeChild","$destroy","manual","attrs","$attrs","on","$listeners","scopedSlots","content","install","Vue$$1","options","component","portalName","portalTargetName","MountingPortalName"],"sources":["../src/utils/index.ts","../src/components/wormhole.ts","../src/components/portal.tsx","../src/components/portal-target.tsx","../src/components/mounting-portal.tsx","../src/index.ts"],"sourcesContent":["import { VNode } from 'vue'\nimport { Transport } from '../types'\n\nexport const inBrowser = typeof window !== 'undefined'\n\nexport function freeze<R>(item: R[]): ReadonlyArray<R> {\n  if (Array.isArray(item) || typeof item === 'object') {\n    return Object.freeze(item)\n  }\n  return item\n}\n\nexport function combinePassengers(\n  transports: Transport[],\n  slotProps = {}\n): Array<VNode> {\n  return transports.reduce(\n    (passengers, transport) => {\n      const temp = transport.passengers[0]\n      const newPassengers =\n        typeof temp === 'function'\n          ? (temp(slotProps) as VNode[])\n          : (transport.passengers as VNode[])\n      return passengers.concat(newPassengers)\n    },\n    [] as Array<VNode>\n  )\n}\n\nexport function stableSort<T>(array: T[], compareFn: Function) {\n  return array\n    .map((v: T, idx: number) => {\n      return [idx, v] as [number, T]\n    })\n    .sort(function(a, b) {\n      return compareFn(a[1], b[1]) || a[0] - b[0]\n    })\n    .map(c => c[1])\n}\n\nexport function pick<T extends object, K extends keyof T>(\n  obj: T,\n  keys: K[]\n): Pick<T, K> {\n  return keys.reduce(\n    (acc, key) => {\n      if (obj.hasOwnProperty(key)) {\n        acc[key] = obj[key]\n      }\n      return acc\n    },\n    {} as Pick<T, K>\n  )\n}\n","import Vue from 'vue'\nimport { freeze, inBrowser, stableSort } from '../utils'\nimport {\n  Transports,\n  Transport,\n  TransportInput,\n  TransportVector,\n  VMRegister,\n} from '../types'\n\nconst transports: Transports = {}\nconst targets: VMRegister = {}\nconst sources: VMRegister = {}\n\nexport const Wormhole = Vue.extend({\n  data: () => ({\n    transports,\n    targets,\n    sources,\n    trackInstances: inBrowser,\n  }),\n  methods: {\n    open(transport: TransportInput) {\n      if (!inBrowser) return\n      const { to, from, passengers, order = Infinity } = transport\n      if (!to || !from || !passengers) return\n\n      const newTransport = {\n        to,\n        from,\n        passengers: freeze<object>(passengers),\n        order,\n      } as Transport\n      const keys = Object.keys(this.transports)\n\n      if (keys.indexOf(to) === -1) {\n        Vue.set(this.transports, to, [])\n      }\n\n      const currentIndex = this.$_getTransportIndex(newTransport)\n      // Copying the array here so that the PortalTarget change event will actually contain two distinct arrays\n      const newTransports = this.transports[to].slice(0)\n      if (currentIndex === -1) {\n        newTransports.push(newTransport)\n      } else {\n        newTransports[currentIndex] = newTransport\n      }\n\n      this.transports[to] = stableSort<Transport>(\n        newTransports,\n        (a: Transport, b: Transport) => a.order - b.order\n      )\n    },\n\n    close(transport: TransportVector, force = false) {\n      const { to, from } = transport\n      if (!to || (!from && force === false)) return\n      if (!this.transports[to]) {\n        return\n      }\n\n      if (force) {\n        this.transports[to] = []\n      } else {\n        const index = this.$_getTransportIndex(transport)\n        if (index >= 0) {\n          // Copying the array here so that the PortalTarget change event will actually contain two distinct arrays\n          const newTransports = this.transports[to].slice(0)\n          newTransports.splice(index, 1)\n          this.transports[to] = newTransports\n        }\n      }\n    },\n    registerTarget(target: string, vm: Vue, force?: boolean): void {\n      if (!inBrowser) return\n      if (this.trackInstances && !force && this.targets[target]) {\n        console.warn(`[portal-vue]: Target ${target} already exists`)\n      }\n      this.$set(this.targets, target, Object.freeze([vm]))\n    },\n    unregisterTarget(target: string) {\n      this.$delete(this.targets, target)\n    },\n    registerSource(source: string, vm: Vue, force?: boolean): void {\n      if (!inBrowser) return\n      if (this.trackInstances && !force && this.sources[source]) {\n        console.warn(`[portal-vue]: source ${source} already exists`)\n      }\n      this.$set(this.sources, source, Object.freeze([vm]))\n    },\n    unregisterSource(source: string) {\n      this.$delete(this.sources, source)\n    },\n    hasTarget(to: string) {\n      return !!(this.targets[to] && this.targets[to][0])\n    },\n    hasSource(to: string) {\n      return !!(this.sources[to] && this.sources[to][0])\n    },\n    hasContentFor(to: string) {\n      return !!this.transports[to] && !!this.transports[to].length\n    },\n    // Internal\n    $_getTransportIndex({ to, from }: TransportVector): number {\n      for (const i in this.transports[to]) {\n        if (this.transports[to][i].from === from) {\n          return +i\n        }\n      }\n      return -1\n    },\n  },\n})\n\nconst wormhole = new Wormhole(transports)\nexport { wormhole }\n","import Vue from 'vue'\nimport { VNode } from 'vue'\nimport { TransportInput, TransportVector } from '../types'\nimport { wormhole } from './wormhole'\n\nlet _id = 1\n\nexport default Vue.extend({\n  name: 'portal',\n  props: {\n    disabled: { type: Boolean },\n    name: { type: String, default: () => String(_id++) },\n    order: { type: Number, default: 0 },\n    slim: { type: Boolean },\n    slotProps: { type: Object, default: () => ({}) },\n    tag: { type: String, default: 'DIV' },\n    to: {\n      type: String,\n      default: () => String(Math.round(Math.random() * 10000000)),\n    },\n  },\n  created() {\n    this.$nextTick(() => {\n      wormhole.registerSource(this.name, this)\n    })\n  },\n  mounted() {\n    if (!this.disabled) {\n      this.sendUpdate()\n    }\n  },\n\n  updated() {\n    if (this.disabled) {\n      this.clear()\n    } else {\n      this.sendUpdate()\n    }\n  },\n\n  beforeDestroy() {\n    wormhole.unregisterSource(this.name)\n    this.clear()\n  },\n  watch: {\n    to(newValue: string, oldValue: string): void {\n      oldValue && oldValue !== newValue && this.clear(oldValue)\n      this.sendUpdate()\n    },\n  },\n\n  methods: {\n    clear(target?: string) {\n      const closer: TransportVector = {\n        from: this.name,\n        to: target || this.to,\n      }\n      wormhole.close(closer)\n    },\n    normalizeSlots(): Function[] | VNode[] | undefined {\n      return this.$scopedSlots.default\n        ? [this.$scopedSlots.default]\n        : this.$slots.default\n    },\n    normalizeOwnChildren(children: VNode[] | Function): VNode[] {\n      return typeof children === 'function'\n        ? children(this.slotProps)\n        : children\n    },\n    sendUpdate() {\n      const slotContent = this.normalizeSlots()\n      if (slotContent) {\n        const transport: TransportInput = {\n          from: this.name,\n          to: this.to,\n          passengers: [...slotContent],\n          order: this.order,\n        }\n        wormhole.open(transport)\n      } else {\n        this.clear()\n      }\n    },\n  },\n\n  render(h): VNode {\n    const children: VNode[] | Function =\n      this.$slots.default || this.$scopedSlots.default || []\n    const Tag = this.tag\n    if (children && this.disabled) {\n      return children.length <= 1 && this.slim ? (\n        this.normalizeOwnChildren(children)[0]\n      ) : (\n        <Tag>{this.normalizeOwnChildren(children)}</Tag>\n      )\n    } else {\n      return this.slim\n        ? h()\n        : h(Tag, {\n            class: { 'v-portal': true },\n            style: { display: 'none' },\n            key: 'v-portal-placeholder',\n          })\n    }\n  },\n})\n","import Vue from 'vue'\nimport { VNode, PropOptions } from 'vue'\nimport { combinePassengers } from '@/utils'\nimport { Transport, PropWithComponent } from '../types'\n\nimport { wormhole } from '@/components/wormhole'\n\nexport default Vue.extend({\n  name: 'portalTarget',\n  props: {\n    multiple: { type: Boolean, default: false },\n    name: { type: String, required: true },\n    slim: { type: Boolean, default: false },\n    slotProps: { type: Object, default: () => ({}) },\n    tag: { type: String, default: 'div' },\n    transition: { type: [String, Object, Function] } as PropOptions<\n      PropWithComponent\n    >,\n  },\n  data() {\n    return {\n      transports: wormhole.transports,\n      firstRender: true,\n    }\n  },\n  created() {\n    this.$nextTick(() => {\n      wormhole.registerTarget(this.name, this)\n    })\n  },\n  watch: {\n    ownTransports() {\n      this.$emit('change', this.children().length > 0)\n    },\n    name(newVal, oldVal) {\n      /**\n       * TODO\n       * This should warn as well ...\n       */\n      wormhole.unregisterTarget(oldVal)\n      wormhole.registerTarget(newVal, this)\n    },\n  },\n  mounted() {\n    if (this.transition) {\n      this.$nextTick(() => {\n        // only when we have a transition, because it causes a re-render\n        this.firstRender = false\n      })\n    }\n  },\n  beforeDestroy() {\n    wormhole.unregisterTarget(this.name)\n  },\n\n  computed: {\n    ownTransports(): Transport[] {\n      const transports: Transport[] = this.transports[this.name] || []\n      if (this.multiple) {\n        return transports\n      }\n      return transports.length === 0 ? [] : [transports[transports.length - 1]]\n    },\n    passengers(): VNode[] {\n      return combinePassengers(this.ownTransports, this.slotProps)\n    },\n  },\n\n  methods: {\n    // can't be a computed prop because it has to \"react\" to $slot changes.\n    children(): VNode[] {\n      return this.passengers.length !== 0\n        ? this.passengers\n        : this.$scopedSlots.default\n        ? (this.$scopedSlots.default(this.slotProps) as VNode[])\n        : this.$slots.default || []\n    },\n    // can't be a computed prop because it has to \"react\" to this.children().\n    noWrapper() {\n      const noWrapper = this.slim && !this.transition\n      if (noWrapper && this.children().length > 1) {\n        console.warn(\n          '[portal-vue]: PortalTarget with `slim` option received more than one child element.'\n        )\n      }\n      return noWrapper\n    },\n  },\n  render(h): VNode {\n    const noWrapper = this.noWrapper()\n    const children = this.children()\n    const Tag = this.transition || this.tag\n\n    return noWrapper\n      ? children[0]\n      : this.slim && !Tag\n      ? h()\n      : h(\n          Tag,\n          {\n            props: {\n              // if we have a transition component, pass the tag if it exists\n              tag: this.transition && this.tag ? this.tag : undefined,\n            },\n            class: { 'vue-portal-target': true },\n          },\n\n          children\n        )\n  },\n})\n","import Vue from 'vue'\nimport { VNode, VueConstructor, PropOptions } from 'vue'\nimport Portal from './portal'\nimport PortalTarget from './portal-target'\nimport { wormhole } from './wormhole'\nimport { pick } from '@/utils'\n\nimport { PropWithComponent } from '../types'\n\nlet _id = 0\n\nexport type withPortalTarget = VueConstructor<\n  Vue & {\n    portalTarget: any\n  }\n>\n\nconst portalProps = [\n  'disabled',\n  'name',\n  'order',\n  'slim',\n  'slotProps',\n  'tag',\n  'to',\n]\n\nconst targetProps = ['multiple', 'transition']\n\nexport default (Vue as withPortalTarget).extend({\n  name: 'MountingPortal',\n  inheritAttrs: false,\n  props: {\n    append: { type: [Boolean, String] },\n    bail: {\n      type: Boolean,\n    },\n    mountTo: { type: String, required: true },\n\n    // Portal\n    disabled: { type: Boolean },\n    // name for the portal\n    name: {\n      type: String,\n      default: () => 'mounted_' + String(_id++),\n    },\n    order: { type: Number, default: 0 },\n    slim: { type: Boolean },\n    slotProps: { type: Object, default: () => ({}) },\n    tag: { type: String, default: 'DIV' },\n    // name for the target\n    to: {\n      type: String,\n      default: () => String(Math.round(Math.random() * 10000000)),\n    },\n\n    // Target\n    multiple: { type: Boolean, default: false },\n    targetSlim: { type: Boolean },\n    targetSlotProps: { type: Object, default: () => ({}) },\n    targetTag: { type: String, default: 'div' },\n    transition: { type: [String, Object, Function] } as PropOptions<\n      PropWithComponent\n    >,\n  },\n  created() {\n    if (typeof document === 'undefined') return\n    let el: HTMLElement | null = document.querySelector(this.mountTo)\n\n    if (!el) {\n      console.error(\n        `[portal-vue]: Mount Point '${this.mountTo}' not found in document`\n      )\n      return\n    }\n\n    const props = this.$props\n\n    // Target already exists\n    if (wormhole.targets[props.name]) {\n      if (props.bail) {\n        console.warn(`[portal-vue]: Target ${props.name} is already mounted.\n        Aborting because 'bail: true' is set`)\n      } else {\n        this.portalTarget = wormhole.targets[props.name]\n      }\n      return\n    }\n\n    const { append } = props\n    if (append) {\n      const type = typeof append === 'string' ? append : 'DIV'\n      const mountEl = document.createElement(type)\n      el.appendChild(mountEl)\n      el = mountEl\n    }\n\n    // get props for target from $props\n    // we have to rename a few of them\n    const _props = pick(this.$props, targetProps)\n    _props.slim = this.targetSlim\n    _props.tag = this.targetTag\n    _props.slotProps = this.targetSlotProps\n    _props.name = this.to\n\n    this.portalTarget = new PortalTarget({\n      el,\n      parent: this.$parent || this,\n      propsData: _props,\n    })\n  },\n\n  beforeDestroy() {\n    const target = this.portalTarget\n    if (this.append) {\n      const el = target.$el\n      el.parentNode.removeChild(el)\n    }\n    target.$destroy()\n  },\n\n  render(h): VNode {\n    if (!this.portalTarget) {\n      console.warn(\"[portal-vue] Target wasn't mounted\")\n      return h()\n    }\n\n    // if there's no \"manual\" scoped slot, so we create a <Portal> ourselves\n    if (!this.$scopedSlots.manual) {\n      const props = pick(this.$props, portalProps)\n      return h(\n        Portal,\n        {\n          props: props,\n          attrs: this.$attrs,\n          on: this.$listeners,\n          scopedSlots: this.$scopedSlots,\n        },\n        this.$slots.default\n      )\n    }\n\n    // else, we render the scoped slot\n    let content: VNode = (this.$scopedSlots.manual({\n      to: this.to,\n    }) as unknown) as VNode\n\n    // if user used <template> for the scoped slot\n    // content will be an array\n    if (Array.isArray(content)) {\n      content = content[0]\n    }\n\n    if (!content) return h()\n\n    return content\n  },\n})\n","import Vue from 'vue'\nimport { VueConstructor } from 'vue'\nimport Portal from './components/portal'\nimport PortalTarget from './components/portal-target'\nimport MountingPortal from './components/mounting-portal'\nimport { wormhole as Wormhole } from './components/wormhole'\n\ndeclare global {\n  interface Window {\n    Vue?: VueConstructor<Vue>\n  }\n}\n\nexport interface PluginOptions {\n  portalName?: string\n  portalTargetName?: string\n  MountingPortalName?: string\n}\n\nfunction install(Vue: VueConstructor<Vue>, options: PluginOptions = {}) {\n  Vue.component(options.portalName || 'Portal', Portal)\n  Vue.component(options.portalTargetName || 'PortalTarget', PortalTarget)\n  Vue.component(options.MountingPortalName || 'MountingPortal', MountingPortal)\n}\nif (\n  // @ts-ignore\n  process.env.ROLLUP_BUILD_MODE === 'umd' &&\n  typeof window !== 'undefined' &&\n  window.Vue &&\n  window.Vue === Vue\n) {\n  window.Vue.use({ install: install })\n}\n\nexport default {\n  install,\n}\n\nexport { Portal, PortalTarget, MountingPortal, Wormhole }\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}