{"ast":null,"code":"var planeFrag = \"\\nvarying vec2 vUv;\\n\\nuniform float\\ttime;\\n\\nfloat\\tcircle(vec2 pos, float rad, float blur)\\n{\\n\\treturn length(pos) - rad;\\n}\\n\\nvoid\\tmain()\\n{\\n\\tvec3\\tcolor = vec3(0.01f, 0.02f, 0.3f);\\n\\tvec3\\tcColor = vec3(1.0f, 0.4f, 0.1f);\\n\\tvec2\\tuv = (vUv * 2.0f) - 1.0f;\\n\\n\\tfloat\\tc = circle(uv - vec2(0.0f, 0.1f), 0.5f, 0.1f);\\n\\n\\tif (c <= 0.0f)\\n\\t\\tcolor = cColor * (0.9f + smoothstep(-0.6f, 0.9f, uv.y) * 2.0f);\\n\\telse\\n\\t\\tcolor.rg += (cColor.rg * smoothstep(0.8f, -0.01f, abs(c + (abs(uv.y) * 0.5f)))) * 1.8;\\n\\tgl_FragColor = vec4(color, 1.0f);\\n}\";\nexport default planeFrag;","map":{"version":3,"names":["planeFrag"],"sources":["/home/valentin/Documents/ft_transcendence/front_end/src/components/ThreeJS/plane-frag.glsl.js"],"sourcesContent":["const planeFrag = `\nvarying vec2 vUv;\n\nuniform float\ttime;\n\nfloat\tcircle(vec2 pos, float rad, float blur)\n{\n\treturn length(pos) - rad;\n}\n\nvoid\tmain()\n{\n\tvec3\tcolor = vec3(0.01f, 0.02f, 0.3f);\n\tvec3\tcColor = vec3(1.0f, 0.4f, 0.1f);\n\tvec2\tuv = (vUv * 2.0f) - 1.0f;\n\n\tfloat\tc = circle(uv - vec2(0.0f, 0.1f), 0.5f, 0.1f);\n\n\tif (c <= 0.0f)\n\t\tcolor = cColor * (0.9f + smoothstep(-0.6f, 0.9f, uv.y) * 2.0f);\n\telse\n\t\tcolor.rg += (cColor.rg * smoothstep(0.8f, -0.01f, abs(c + (abs(uv.y) * 0.5f)))) * 1.8;\n\tgl_FragColor = vec4(color, 1.0f);\n}`;\n\nexport default planeFrag;\n"],"mappings":"AAAA,IAAMA,SAAS,gjBAuBb;AAEF,eAAeA,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}