{"ast":null,"code":"var cubeFrag = \"\\nvarying vec2\\tvUv;\\nvarying vec4\\tvPosition;\\nvarying vec3\\tvCamPos;\\n\\nuniform float\\ttime;\\nuniform vec2\\tresolution;\\n\\nvec3\\tgetGrid(vec2 uv, float width, vec3 baseColor)\\n{\\n\\tfloat\\tc = max(smoothstep(width, 0.001f, abs(uv.x)), smoothstep(width, 0.001f, abs(uv.y)));\\n\\t\\n\\treturn vec3(c) * baseColor;\\n}\\n\\nfloat\\tgetFogFactor(float d)\\n{\\n\\tconst float fogMax = 30.0f;\\n\\tconst float fogMin = 1.0f;\\n\\n\\tif (d >= fogMax) return 1.0f;\\n\\tif (d <= fogMin) return 0.0f;\\n\\n\\treturn 1.0f - (fogMax - d) / (fogMax - fogMin);\\n}\\n\\nvoid\\tmain()\\n{\\n\\tvec3\\tcolor = vec3(0.1f, 0.0f, 0.2f);\\n\\tvec2\\tuv = fract(vUv * 250.0f) - 0.5f;\\n\\t\\n\\tcolor += getGrid(uv, 0.08f, vec3(1.5f, 0.8f, 2.0f));\\n\\t\\n\\tvec3\\thColor = vec3(vPosition.z * 0.1f);\\n\\n\\thColor *= 8.0f;\\n\\thColor = floor(hColor);\\n\\thColor /= 8.0f;\\n\\n\\tfloat\\tdFog = distance(vec4(vCamPos, 1.0f), vPosition) * 0.012f;\\n\\n\\n\\t//color *= vec3(-(abs(vUv.y) - 0.7f)) * 3.0f;\\n\\n\\tgl_FragColor = mix(vec4(1.0f, 0.68f, 0.2f, 1.0f), vec4(color * hColor, 1.0f), getFogFactor(pow(dFog, 7.0f)));\\n}\";\nexport default cubeFrag;","map":{"version":3,"names":["cubeFrag"],"sources":["/home/valentin/Documents/ft_transcendence/front_end/src/components/ThreeJS/cube-frag.glsl.js"],"sourcesContent":["const cubeFrag = `\nvarying vec2\tvUv;\nvarying vec4\tvPosition;\nvarying vec3\tvCamPos;\n\nuniform float\ttime;\nuniform vec2\tresolution;\n\nvec3\tgetGrid(vec2 uv, float width, vec3 baseColor)\n{\n\tfloat\tc = max(smoothstep(width, 0.001f, abs(uv.x)), smoothstep(width, 0.001f, abs(uv.y)));\n\t\n\treturn vec3(c) * baseColor;\n}\n\nfloat\tgetFogFactor(float d)\n{\n\tconst float fogMax = 30.0f;\n\tconst float fogMin = 1.0f;\n\n\tif (d >= fogMax) return 1.0f;\n\tif (d <= fogMin) return 0.0f;\n\n\treturn 1.0f - (fogMax - d) / (fogMax - fogMin);\n}\n\nvoid\tmain()\n{\n\tvec3\tcolor = vec3(0.1f, 0.0f, 0.2f);\n\tvec2\tuv = fract(vUv * 250.0f) - 0.5f;\n\t\n\tcolor += getGrid(uv, 0.08f, vec3(1.5f, 0.8f, 2.0f));\n\t\n\tvec3\thColor = vec3(vPosition.z * 0.1f);\n\n\thColor *= 8.0f;\n\thColor = floor(hColor);\n\thColor /= 8.0f;\n\n\tfloat\tdFog = distance(vec4(vCamPos, 1.0f), vPosition) * 0.012f;\n\n\n\t//color *= vec3(-(abs(vUv.y) - 0.7f)) * 3.0f;\n\n\tgl_FragColor = mix(vec4(1.0f, 0.68f, 0.2f, 1.0f), vec4(color * hColor, 1.0f), getFogFactor(pow(dFog, 7.0f)));\n}`;\n\nexport default cubeFrag;\n"],"mappings":"AAAA,IAAMA,QAAQ,+hCA6CZ;AAEF,eAAeA,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}